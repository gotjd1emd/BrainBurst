<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="userMapper">

	<!-- DB 컬럼명에 userDTO의 값 하나씩 대입 이름이 같으면 resultMap 생성하지 않아도 됨 -->
	<resultMap type="userDTO" id="userMap">
		<id column="email" property="email"/>
		<result column="nickname" property="nickname"/>
		<result column="phone" property="phone"/>
		<result column="password" property="password"/>
		<result column="cash_point" property="cashPoint"/>
		<result column="user_level" property="level"/>
		<result column="name" property="name"/>
		<result column="gender" property="gender"/>
		<result column="birth_date" property="birthDate" />
	</resultMap>
	
	<resultMap type="additionalInfoDTO" id="additionalInfoMap">
		<id column="email" property="email"/>
		<result column="account_Password" property="accountPassword"/>
		<result column="bank_name" property="bankName"/>
		<result column="account_Number" property="accountNumber"/>
		<result column="identification_Card" property="identificationCard"/>
	</resultMap>
	
	<resultMap type="cashHistoryDTO" id="cashHistoryMap">
		<id column="email" property="email"/>
		<result column="account_day" property="accountDay"/>
		<result column="cash_point" property="cashPoint"/>
		<result column="content" property="content"/>
		<result column="trade_state" property="tradeState"/>
	</resultMap>

	<!-- Login -->
	<select id="login" resultMap="userMap" parameterType="userDTO">
		select email, nickname, phone, password, cash_Point, user_level, name, gender, birth_date 
		from user_information 
		where email = #{email} and password = #{password}
	</select>
	
	<!-- checkId -->
	<select id="checkId" resultMap="userMap" parameterType="String">
		select email, nickname, phone, password, cash_Point, user_level, name, gender, birth_date
		from user_information 
		where email = #{email}
	</select>
	
	<!-- signUp -->
	<insert id="signUp" parameterType="userDTO">
		insert into user_information (email, nickname, phone, password, name, gender, birth_date) 
		values ( #{email}, #{nickname}, #{phone}, #{password}, #{name}, #{gender}, #{birthDate} )
	</insert>
	
	<!-- userDelete -->
	<delete id="userDelete" parameterType="String">
		delete from user_information
		where email = #{email}
	</delete>
	
	<!-- uesrUpdate -->
	<update id="userUpdate" parameterType="userDTO">
		update user_information
		set phone = #{phone}, password = #{password}
		where email = #{email}
	</update>
	
	<!-- additionalInfo -->
	<insert id="additionalInfoMap" parameterType="additionalInfoDTO">
		insert into additional_info 
		values (#{email}, #{accountPassword}, #{bankName}, #{accountNumber}, #{identificationCard})
	</insert>
	
	<!-- userInfoSelect -->
	<select id="userInfoSelect" resultMap="userMap" parameterType="String">
		select email, nickname, phone, password, cash_Point, user_level, name, gender, birth_Date
		from user_information 
		where email = #{email}
	</select>
	
	<!-- cashCharge -->
	<update id="cashCharge" parameterType="userDTO">
		update user_information 
		set cash_point = #{cashPoint}
		where email = #{email}
	</update>
	
	<!-- cashHistoryInsert -->
	<insert id="cashHistoryInsert" parameterType="cashHistoryDTO">
		insert into cash_history(cash_history_sequence, account_day, email, cash_point, content, trade_state) 
		values (cash_history_seq.nextval, sysdate, #{email}, #{cashPoint}, #{content}, #{tradeState})
	</insert>
	
	<!-- THistoryList -->
	<select id="THistoryList" resultMap="" parameterType="email">
		select account_day, cash_point, content, trade_state from T_history where email=#{email}
	</select>
</mapper>

